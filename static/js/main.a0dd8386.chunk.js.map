{"version":3,"sources":["components/Nav.js","components/Song.js","components/Player.js","img/shuffle.png","components/PlaylistSong.js","components/Playlist.js","data.js","App.js","reportWebVitals.js","index.js"],"names":["Nav","playlistStatus","setPlaylistStatus","onClick","icon","faEllipsisH","size","Song","currentSong","isPlaying","className","src","cover","alt","name","artist","Player","songs","setCurrentSong","setIsPlaying","songInfo","setSongInfo","audioRef","isRepeat","setIsRepeat","isShuffle","setIsShuffle","timeUpdateHandler","e","currentTime","target","duration","playModeHandler","playMode","onEndedHandler","a","current","play","randomSong","Math","floor","random","length","skip","skipType","currentIndex","indexOf","skippedSong","timeConverter","time","slice","trackPercent","round","console","log","trackStyling","background","style","min","max","value","onChange","type","faRedoAlt","faAngleDoubleLeft","pause","faPause","faPlay","faAngleDoubleRight","faRandom","onTimeUpdate","onLoadedMetadata","ref","audio","onEnded","PlaylistSong","song","clickSongHandler","id","Playlist","map","musicData","color","uuidv4","App","useState","setSongs","useRef","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a0dd8386.chunk.js","sourcesContent":["import React from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faEllipsisH } from \"@fortawesome/free-solid-svg-icons\";\n\nconst Nav = ({ playlistStatus, setPlaylistStatus }) => {\n    //Event Handler\n    const playlistHandler = () => {\n        setPlaylistStatus(!playlistStatus)\n    }\n  return (\n    <nav>\n      <h1>Frequency</h1>\n      <button onClick={playlistHandler}>\n        <FontAwesomeIcon icon={faEllipsisH} size=\"2x\" />\n      </button>\n    </nav>\n  );\n};\n\nexport default Nav;\n","import React from \"react\";\n\nconst Song = ({ currentSong, isPlaying }) => {\n\n  return (\n    <div className=\"song-container\">\n      <div className=\"cover-wrap\">\n        <img\n          src={currentSong.cover}\n          alt={currentSong.name}\n          className={isPlaying ? \"cover-active\" : \"\"}\n        />\n        <div className=\"cover-core\"></div>\n      </div>\n      <div className=\"song-info\">\n        <h2 className=\"song-name\">{currentSong.name}</h2>\n        <h3 className=\"song-artist\">{currentSong.artist}</h3>\n      </div>\n    </div>\n  );\n};\n\nexport default Song;\n","import React from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faPlay,\n  faPause,\n  faAngleDoubleRight,\n  faAngleDoubleLeft,\n  faRedoAlt,\n  faRandom,\n} from \"@fortawesome/free-solid-svg-icons\";\n\nimport repeatIcon from \"../img/repeat.png\";\nimport shuffleIcon from \"../img/shuffle.png\";\n\nconst Player = ({\n  songs,\n  currentSong,\n  setCurrentSong,\n  isPlaying,\n  setIsPlaying,\n  songInfo,\n  setSongInfo,\n  audioRef,\n  isRepeat,\n  setIsRepeat,\n  isShuffle,\n  setIsShuffle,\n}) => {\n  // Event Handlers\n  const playHandler = () => {\n    isPlaying ? audioRef.current.pause() : audioRef.current.play();\n    setIsPlaying(!isPlaying);\n\n  };\n\n  const timeUpdateHandler = (e) => {\n    const currentTime = e.target.currentTime;\n    const duration = e.target.duration;\n    setSongInfo({ ...songInfo, duration, currentTime });\n  };\n\n  const changeSongTimeHandler = (e) => {\n    audioRef.current.currentTime = e.target.value;\n    setSongInfo({ ...songInfo, currentTime: e.target.value });\n  };\n\n  const playModeHandler = (playMode) => {\n    if (playMode === \"repeat\") {\n      setIsRepeat(!isRepeat);\n      if (isShuffle) setIsShuffle(false);\n    } else if (playMode === \"shuffle\") {\n      setIsShuffle(!isShuffle);\n      if (isRepeat) setIsRepeat(false);\n    }\n  };\n\n  const onEndedHandler = async () => {\n    if (isRepeat) {\n      await setCurrentSong(currentSong);\n      audioRef.current.play();\n    } else if (isShuffle) {\n      const randomSong = songs[Math.floor(Math.random() * songs.length)];\n      await setCurrentSong(randomSong);\n      audioRef.current.play();\n    } else {\n      skip(\"forward\");\n    }\n  };\n\n  // Skip song function\n  const skip = async (skipType) => {\n    const currentIndex = songs.indexOf(currentSong);\n\n    let skippedSong;\n\n    if (skipType === \"forward\") {\n      skippedSong = songs[(currentIndex + 1) % songs.length];\n    } else if (skipType === \"backward\") {\n      if ((currentIndex - 1) % songs.length === -1) {\n        skippedSong = songs[songs.length - 1];\n      } else {\n        skippedSong = songs[(currentIndex - 1) % songs.length];\n      }\n    }\n\n    await setCurrentSong(skippedSong);\n\n    if (!isPlaying) {\n      setIsPlaying(true);\n    }\n\n    audioRef.current.play();\n  };\n\n  // Song time converter\n  const timeConverter = (time) => {\n    return (\n      Math.floor(time / 60) + \":\" + (\"0\" + Math.floor(time % 60)).slice(-2)\n    );\n  };\n\n  // Track styling\n  const trackPercent = Math.round((songInfo.currentTime / songInfo.duration) * 100);\n  console.log(trackPercent)\n  const trackStyling = {\n    background: `linear-gradient(90deg, #d100d1 ${trackPercent}%, rgb(235, 235, 255) ${trackPercent}%)`,\n  };\n\n  return (\n    <div className=\"player-container\">\n      <div className=\"time-control\">\n        <p>{timeConverter(songInfo.currentTime)}</p>\n        <div style={trackStyling} className=\"track\">\n          <input\n            min={0}\n            max={songInfo.duration || 0}\n            value={songInfo.currentTime}\n            onChange={changeSongTimeHandler}\n            type=\"range\"\n          />\n          <div className=\"animate-track\"></div>\n        </div>\n        <p>{songInfo.duration ? timeConverter(songInfo.duration) : \"0:00\"}</p>\n      </div>\n      <div className=\"play-control\">\n        <FontAwesomeIcon\n\n          icon={faRedoAlt}\n          onClick={() => playModeHandler(\"repeat\")}\n          className={isRepeat ? \"active-playmode\" : \"\"}\n        />\n        <FontAwesomeIcon\n          onClick={() => skip(\"backward\")}\n          className=\"backward\"\n          size=\"2x\"\n          icon={faAngleDoubleLeft}\n        />\n        <FontAwesomeIcon\n          onClick={playHandler}\n          className=\"play\"\n          size=\"3x\"\n          icon={isPlaying ? faPause : faPlay}\n        />\n        <FontAwesomeIcon\n          onClick={() => skip(\"forward\")}\n          className=\"forward\"\n          size=\"2x\"\n          icon={faAngleDoubleRight}\n        />\n        <FontAwesomeIcon\n          icon={faRandom}\n          onClick={() => playModeHandler(\"shuffle\")}\n          className={isShuffle ? \"active-playmode\" : \"\"}\n        />\n      </div>\n      <audio\n        onTimeUpdate={timeUpdateHandler}\n        onLoadedMetadata={timeUpdateHandler}\n        ref={audioRef}\n        src={currentSong.audio}\n        onEnded={onEndedHandler}\n      ></audio>\n    </div>\n  );\n};\n\nexport default Player;\n","export default __webpack_public_path__ + \"static/media/shuffle.24d8bc70.png\";","import React from \"react\";\n\nconst PlaylistSong = ({\n  song,\n  currentSong,\n  isPlaying,\n  setIsPlaying,\n  setCurrentSong,\n  audioRef,\n}) => {\n  // Event Handler\n  const clickSongHandler = async () => {\n    await setCurrentSong(song);\n\n    if (!isPlaying) {\n      setIsPlaying(true);\n    }\n\n    audioRef.current.play();\n\n  };\n\n  return (\n    <div\n      onClick={clickSongHandler}\n      className={`playlist-song-container ${\n        song.id === currentSong.id ? \"selected-song\" : \"\"\n      }`}\n    >\n      <img src={song.cover} alt={song.name} />\n      <div className=\"playlist-song-info\">\n        <h3 className=\"playlist-song-name\">{song.name}</h3>\n        <h4 className=\"playlist-song-artist\">{song.artist}</h4>\n      </div>\n    </div>\n  );\n};\n\nexport default PlaylistSong;\n","import React from \"react\";\n\n// Import Component\nimport PlaylistSong from \"./PlaylistSong\";\n\nconst Playlist = ({\n  songs,\n  currentSong,\n  setCurrentSong,\n  isPlaying,\n  setIsPlaying,\n  audioRef,\n  playlistStatus,\n}) => {\n  return (\n    <div\n      className={`playlist-container ${\n        playlistStatus ? \"active-playlist\" : \"\"\n      }`}\n    >\n      <h2>Playlist</h2>\n      {songs.map((song) => {\n        return (\n          <PlaylistSong\n            song={song}\n            currentSong={currentSong}\n            key={song.id}\n            setCurrentSong={setCurrentSong}\n            isPlaying={isPlaying}\n            setIsPlaying={setIsPlaying}\n            audioRef={audioRef}\n          />\n        );\n      })}\n    </div>\n  );\n};\n\nexport default Playlist;\n","import { v4 as uuidv4 } from 'uuid';\n\n\nconst musicData = () => {\n    return [\n        {\n            name: \"Dreamstate\",\n            cover: \"https://chillhop.com/wp-content/uploads/2021/05/8ef1fa972003495d1ecfba6292116174e9c5d940-1024x1024.jpg\",\n            artist: \"Toonorth\",\n            audio: \"https://mp3.chillhop.com/serve.php/?mp3=17947\",\n            color: [\"#A1ABF9\", \"#2E435F\"], \n            id: uuidv4(), \n\n        },\n        {\n            name: \"Bliss\",\n            cover: \"https://chillhop.com/wp-content/uploads/2021/05/2473c60e471fe9b40e246bf7711c87d3d6ea69a7-1024x1024.jpg\",\n            artist: \"Misha, Jussi Halme\",\n            audio: \"https://mp3.chillhop.com/serve.php/?mp3=9248\",\n            color: [\"#F3A19A\", \"#A89FB2\"], \n            id: uuidv4(), \n        },\n        {\n            name: \"On The Moon\",\n            cover: \"https://chillhop.com/wp-content/uploads/2021/03/74d62bc9370a68e440c1b98eaf650344f0a7faea-1024x1024.jpg\",\n            artist: \"SwuM\",\n            audio: \"https://mp3.chillhop.com/serve.php/?mp3=15237\",\n            color: [\"#263330\", \"#964F2D\"], \n            id: uuidv4(), \n        },\n        {\n            name: \"Vintage\",\n            cover: \"https://chillhop.com/wp-content/uploads/2021/04/cb0cc6270d7f2e1bb13e44e8832bd5c9b2a61080-1024x1024.jpg\",\n            artist: \"Evil Needle\",\n            audio: \"https://mp3.chillhop.com/serve.php/?mp3=17088\",\n            color: [\"#EBC77E\", \"#ED544E\"], \n            id: uuidv4(), \n        },\n        {\n            name: \"Lost Soul\",\n            cover: \"https://chillhop.com/wp-content/uploads/2021/02/d12927eedcc2f5afba2ab049a4a1ea46c2266ae3-1024x1024.jpg\",\n            artist: \"C Y G N\",\n            audio: \"https://mp3.chillhop.com/serve.php/?mp3=14989\",\n            color: [\"#E199DA\", \"#89ACE8\"], \n            id: uuidv4(), \n        },\n        {\n            name: \"Ambleside\",\n            cover: \"https://chillhop.com/wp-content/uploads/2021/02/7f102bdde417f6ead9a120b2b931449e5c12b4da-1024x1024.jpg\",\n            artist: \"Aarigod\",\n            audio: \"https://mp3.chillhop.com/serve.php/?mp3=12999\",\n            color: [\"#B8CE7B\", \"#495C2E\"], \n            id: uuidv4(), \n        },\n        {\n            name: \"1999\",\n            cover: \"https://chillhop.com/wp-content/uploads/2020/05/299ed90790252c3b19e0b5ca350d1cf3a9c30436-1024x1024.jpg\",\n            artist: \"sadtoi\",\n            audio: \"https://mp3.chillhop.com/serve.php/?mp3=9454\",\n            color: [\"#C26F40\", \"#869785\"], \n            id: uuidv4(), \n        },\n        {\n            name: \"Hibiscus\",\n            cover: \"https://chillhop.com/wp-content/uploads/2020/07/858b533ba20ff95bf5b401089b195d1a8cb43870-1024x1024.jpg\",\n            artist: \"G Mills, Felty\",\n            audio: \"https://mp3.chillhop.com/serve.php/?mp3=8971\",\n            color: [\"#C26F40\", \"#869785\"], \n            id: uuidv4(), \n        }\n    ]\n}\n\nexport default musicData;","import React, { useState, useRef } from \"react\";\n// Styles\nimport \"./style/App.scss\";\n// Components\nimport Nav from \"./components/Nav\";\nimport Song from \"./components/Song\";\nimport Player from \"./components/Player\";\nimport Playlist from \"./components/Playlist\";\n// Data\nimport musicData from \"./data\";\n\nfunction App() {\n  const [songs, setSongs] = useState(musicData());\n  const [currentSong, setCurrentSong] = useState(songs[0]);\n  const [isPlaying, setIsPlaying] = useState(false);\n  const [songInfo, setSongInfo] = useState({ duration: 0, currentTime: 0 });\n  const [playlistStatus, setPlaylistStatus] = useState(false);\n  const [isRepeat, setIsRepeat] = useState(false);\n  const [isShuffle, setIsShuffle] = useState(false);\n\n  const audioRef = useRef(null);\n\n  return (\n    <div className=\"App\">\n      <Nav\n        playlistStatus={playlistStatus}\n        setPlaylistStatus={setPlaylistStatus}\n      />\n      <Song currentSong={currentSong} isPlaying={isPlaying} />\n      <Player\n        audioRef={audioRef}\n        songs={songs}\n        setSongs={setSongs}\n        currentSong={currentSong}\n        setCurrentSong={setCurrentSong}\n        isPlaying={isPlaying}\n        setIsPlaying={setIsPlaying}\n        songInfo={songInfo}\n        setSongInfo={setSongInfo}\n        isRepeat={isRepeat}\n        setIsRepeat={setIsRepeat}\n        isShuffle={isShuffle}\n        setIsShuffle={setIsShuffle}\n      />\n\n      <Playlist\n        songs={songs}\n        currentSong={currentSong}\n        setCurrentSong={setCurrentSong}\n        isPlaying={isPlaying}\n        setIsPlaying={setIsPlaying}\n        audioRef={audioRef}\n        playlistStatus={playlistStatus}\n      />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}